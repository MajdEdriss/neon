// generate color palette
@import '../includes/farbig/farbig';

$neutral-palette: neutral-palette() !default;
$low-contrast-palette: low-contrast-palette() !default;
$high-contrast-palette: high-contrast-palette() !default;
$brand-palette: generate-palette($color-brand) !default;
$primary-palette: generate-palette($color-primary) !default;
$info-palette: generate-palette($color-info) !default;
$success-palette: generate-palette($color-success) !default;
$warn-palette: generate-palette($color-warn) !default;
$error-palette: generate-palette($color-error) !default;

$functional-colors: (
  neutral: $neutral-palette,
  low-contrast: $low-contrast-palette,
  high-contrast: $high-contrast-palette,
  brand: $brand-palette,
  primary: $primary-palette,
  info: $info-palette,
  success: $success-palette,
  warn: $warn-palette,
  error: $error-palette,
);

@include generate-color-classes('neon-neutral', $neutral-palette);
@include generate-color-classes('neon-low-contrast', $low-contrast-palette);
@include generate-color-classes('neon-high-contrast', $high-contrast-palette);
@include generate-color-classes('neon-brand', $brand-palette);
@include generate-color-classes('neon-primary', $primary-palette);
@include generate-color-classes('neon-info', $info-palette);
@include generate-color-classes('neon-success', $success-palette);
@include generate-color-classes('neon-warn', $warn-palette);
@include generate-color-classes('neon-error', $error-palette);

$color-neutral-l5: map-get($neutral-palette, l5);
$color-neutral-l4: map-get($neutral-palette, l4);
$color-neutral-l3: map-get($neutral-palette, l3);
$color-neutral-l2: map-get($neutral-palette, l2);
$color-neutral-l1: map-get($neutral-palette, l1);
$color-neutral-d1: map-get($neutral-palette, d1);
$color-neutral-d2: map-get($neutral-palette, d2);
$color-neutral-d3: map-get($neutral-palette, d3);
$color-neutral-d4: map-get($neutral-palette, d4);
$color-neutral-d5: map-get($neutral-palette, d5);

$color-low-contrast-l5: map-get($low-contrast-palette, l5);
$color-low-contrast-l4: map-get($low-contrast-palette, l4);
$color-low-contrast-l3: map-get($low-contrast-palette, l3);
$color-low-contrast-l2: map-get($low-contrast-palette, l2);
$color-low-contrast-l1: map-get($low-contrast-palette, l1);
$color-low-contrast-d1: map-get($low-contrast-palette, d1);
$color-low-contrast-d2: map-get($low-contrast-palette, d2);
$color-low-contrast-d3: map-get($low-contrast-palette, d3);
$color-low-contrast-d4: map-get($low-contrast-palette, d4);
$color-low-contrast-d5: map-get($low-contrast-palette, d5);

$color-high-contrast-l5: map-get($high-contrast-palette, l5);
$color-high-contrast-l4: map-get($high-contrast-palette, l4);
$color-high-contrast-l3: map-get($high-contrast-palette, l3);
$color-high-contrast-l2: map-get($high-contrast-palette, l2);
$color-high-contrast-l1: map-get($high-contrast-palette, l1);
$color-high-contrast-d1: map-get($high-contrast-palette, d1);
$color-high-contrast-d2: map-get($high-contrast-palette, d2);
$color-high-contrast-d3: map-get($high-contrast-palette, d3);
$color-high-contrast-d4: map-get($high-contrast-palette, d4);
$color-high-contrast-d5: map-get($high-contrast-palette, d5);

$color-brand-l5: map-get($brand-palette, l5);
$color-brand-l4: map-get($brand-palette, l4);
$color-brand-l3: map-get($brand-palette, l3);
$color-brand-l2: map-get($brand-palette, l2);
$color-brand-l1: map-get($brand-palette, l1);
$color-brand-d1: map-get($brand-palette, d1);
$color-brand-d2: map-get($brand-palette, d2);
$color-brand-d3: map-get($brand-palette, d3);
$color-brand-d4: map-get($brand-palette, d4);
$color-brand-d5: map-get($brand-palette, d5);

$color-primary-l5: map-get($primary-palette, l5);
$color-primary-l4: map-get($primary-palette, l4);
$color-primary-l3: map-get($primary-palette, l3);
$color-primary-l2: map-get($primary-palette, l2);
$color-primary-l1: map-get($primary-palette, l1);
$color-primary-d1: map-get($primary-palette, d1);
$color-primary-d2: map-get($primary-palette, d2);
$color-primary-d3: map-get($primary-palette, d3);
$color-primary-d4: map-get($primary-palette, d4);
$color-primary-d5: map-get($primary-palette, d5);

$color-info-l5: map-get($info-palette, l5);
$color-info-l4: map-get($info-palette, l4);
$color-info-l3: map-get($info-palette, l3);
$color-info-l2: map-get($info-palette, l2);
$color-info-l1: map-get($info-palette, l1);
$color-info-d1: map-get($info-palette, d1);
$color-info-d2: map-get($info-palette, d2);
$color-info-d3: map-get($info-palette, d3);
$color-info-d4: map-get($info-palette, d4);
$color-info-d5: map-get($info-palette, d5);

$color-success-l5: map-get($success-palette, l5);
$color-success-l4: map-get($success-palette, l4);
$color-success-l3: map-get($success-palette, l3);
$color-success-l2: map-get($success-palette, l2);
$color-success-l1: map-get($success-palette, l1);
$color-success-d1: map-get($success-palette, d1);
$color-success-d2: map-get($success-palette, d2);
$color-success-d3: map-get($success-palette, d3);
$color-success-d4: map-get($success-palette, d4);
$color-success-d5: map-get($success-palette, d5);

$color-warn-l5: map-get($warn-palette, l5);
$color-warn-l4: map-get($warn-palette, l4);
$color-warn-l3: map-get($warn-palette, l3);
$color-warn-l2: map-get($warn-palette, l2);
$color-warn-l1: map-get($warn-palette, l1);
$color-warn-d1: map-get($warn-palette, d1);
$color-warn-d2: map-get($warn-palette, d2);
$color-warn-d3: map-get($warn-palette, d3);
$color-warn-d4: map-get($warn-palette, d4);
$color-warn-d5: map-get($warn-palette, d5);

$color-error-l5: map-get($error-palette, l5);
$color-error-l4: map-get($error-palette, l4);
$color-error-l3: map-get($error-palette, l3);
$color-error-l2: map-get($error-palette, l2);
$color-error-l1: map-get($error-palette, l1);
$color-error-d1: map-get($error-palette, d1);
$color-error-d2: map-get($error-palette, d2);
$color-error-d3: map-get($error-palette, d3);
$color-error-d4: map-get($error-palette, d4);
$color-error-d5: map-get($error-palette, d5);

&.neon-mode--light {
  @import 'variables-light';
  @import 'color-components';
}

&.neon-mode--dark {
  @import 'variables-dark';
  @import 'color-components';
}
