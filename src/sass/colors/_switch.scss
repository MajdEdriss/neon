@mixin switch-color-default() {
  .neon-switch__switch {
    background-color: $neon-color-switch-off;
    transition: background-color $neon-animation-speed-fast ease-in;
    box-shadow: $neon-inset-shadow-switch;

    &:focus {
      box-shadow: 0 0 0 4px rgba($neon-color-text-low-contrast, 0.3), $neon-inset-shadow-switch;
    }
  }

  .neon-switch__indicator {
    background-color: $neon-color-switch-indicator;
    box-shadow: 0 0 2px 1px rgba($neon-color-neutral-d5, 0.3);
  }

  @each $color, $palette in $neon-functional-colors {
    &.neon-switch--#{$color} {
      &.neon-switch--checked:not(.neon-switch--disabled) {
        .neon-switch__switch {
          background-color: map-get($palette, $neon-color-switch-on);

          &:focus {
            box-shadow: 0 0 0 4px rgba(map-get($palette, $neon-color-switch-on), 0.3), $neon-inset-shadow-switch;
          }
        }
      }
    }
  }

  &.neon-switch--disabled {
    .neon-switch__switch,
    .neon-switch__indicator {
      box-shadow: none;
    }

    .neon-switch__switch {
      background-color: $neon-color-switch-disabled;
    }

    .neon-switch__indicator {
      background-color: $neon-color-switch-indicator-disabled;
    }
  }
}

@mixin switch-color-sharp() {
  .neon-switch__switch {
    border: $neon-border-width solid $neon-color-switch-off;
    transition: all $neon-animation-speed-fast ease-in;

    &:focus {
      box-shadow: 0 0 0 4px rgba($neon-color-text-low-contrast, 0.3);
    }
  }

  .neon-switch__indicator {
    background-color: $neon-color-switch-off;
    transition: all $neon-animation-speed-fast ease-in;
  }

  @each $color, $palette in $neon-functional-colors {
    &.neon-switch--#{$color} {
      &.neon-switch--checked:not(.neon-switch--disabled) {
        .neon-switch__switch {
          border-color: map-get($palette, $neon-color-switch-on);

          &:focus {
            box-shadow: 0 0 0 4px rgba(map-get($palette, $neon-color-switch-on), 0.3);
          }

          .neon-switch__indicator {
            background-color: map-get($palette, $neon-color-switch-on);
          }
        }
      }
    }
  }

  &.neon-switch--disabled {
    .neon-switch__switch {
      border-color: rgba($neon-color-disabled-light, 0.5);
    }

    .neon-switch__indicator {
      background-color: rgba($neon-color-disabled-light, 0.5);
    }
  }
}

@mixin neon-switch-color-import {
  .neon-switch {
    color: $neon-color-text;

    &--switch {
      @if ($neon-theme == 'sharp') {
        @include switch-color-sharp;
      } @else {
        @include switch-color-default;
      }
    }

    &--checkbox {
      @each $color, $palette in $neon-functional-colors {
        &.neon-switch--#{$color}:not(.neon-switch--disabled) {
          .neon-switch__checkbox {
            border-color: $neon-border-color-input;
            box-shadow: $neon-inset-shadow;

            &:focus {
              box-shadow: 0 0 0 4px rgba($neon-color-text-low-contrast, 0.3);
            }
          }

          &.neon-switch--checked {
            .neon-switch__checkbox {
              border-color: map-get($palette, $neon-border-color-checkbox);
              background: linear-gradient(
                0deg,
                map-get($palette, $neon-border-color-checkbox) 0%,
                map-get($palette, $neon-background-color-checkbox) 100%
              );

              &:focus {
                box-shadow: 0 0 0 4px rgba(map-get($palette, $neon-background-color-checkbox), 0.3);
              }
            }
          }

          &:not(.neon-switch--checked) {
            &:hover {
              .neon-switch__checkbox {
                background-color: rgba($neon-color-switch-off, 0.125);
              }
            }
          }
        }
      }

      &.neon-switch--disabled {
        .neon-switch__checkbox {
          box-shadow: none;
          border: none;
          background-color: $neon-color-switch-disabled;
          @include color-with-svg($neon-color-switch-indicator-disabled);
        }
      }
    }
  }
}
