@mixin neon-note-color-import {
  .neon-note {
    color: $neon-color-note;

    strong {
      color: $neon-color-text;
    }

    @each $color, $palette in $neon-functional-colors {
      &--#{$color} {
        background-color: rgba(map-get($palette, $neon-background-color-note), $neon-background-opacity-note);
        border: $neon-border-width-note $neon-border-style map-get($palette, $neon-border-color-note);
      }
    }

    .neon-button.neon-button--s.neon-button--icon-only {
      min-width: $neon-size-xs;
      width: $neon-size-xs;
      height: $neon-size-xs;
      opacity: 0.75;

      &:hover {
        background-color: transparent;
        opacity: 1;
      }
    }
  }
}

blockquote {
  color: $neon-color-note;

  strong {
    color: $neon-color-text;
  }

  background-color: rgba(map-get($neon-primary-palette, $neon-background-color-note), $neon-background-opacity-note);
  border: $neon-border-width-note $neon-border-style map-get($neon-primary-palette, $neon-border-color-note);
}
